openapi: 3.0.1
info:
  title: Internal Azure OpenAI Proxy
  description: Generic proxy for Azure OpenAI GPT models (gpt-35-turbo, gpt-4, gpt-4o, etc.)
  version: 1.0.2

servers:
  - url: https://your-internal-gateway-domain.com

paths:
  /azure/openai/{deployment_id}/chat/completions:
    post:
      summary: Chat completion for any GPT model via Azure OpenAI
      operationId: azureGenericChatCompletion
      tags:
        - ChatCompletion
      parameters:
        - name: deployment_id
          in: path
          required: true
          schema:
            type: string
          description: Name of the deployed GPT model (e.g., gpt-4, gpt-35-turbo, gpt-4o)
        - $ref: '#/components/parameters/projectnumHeader'
        - $ref: '#/components/parameters/projectnameHeader'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatCompletionRequest'
            examples:
              example1:
                value:
                  messages:
                    - role: user
                      content: "What is the weather today?"
                  temperature: 0.7
                  max_tokens: 100
                  top_p: 1.0
                  frequency_penalty: 0.0
                  presence_penalty: 0.0
      responses:
        '200':
          description: Successful completion
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatCompletionResponse'
              examples:
                example1:
                  value:
                    id: "chatcmpl-123"
                    created: 1681234567
                    model: "gpt-4"
                    choices:
                      - index: 0
                        message:
                          role: assistant
                          content: "The weather today is sunny."
                        finish_reason: "stop"
                    usage:
                      prompt_tokens: 10
                      completion_tokens: 20
                      total_tokens: 30
        '400':
          description: Bad Request - Missing required headers
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Missing required header: projectnum or projectname"
        '429':
          description: Rate limit exceeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Rate limit exceeded. Please try again later."
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Unauthorized. Invalid or missing API key."
        '500':
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Internal server error. Please contact support."
      security:
        - azureApiKey: []

components:
  parameters:
    projectnumHeader:
      name: projectnum
      in: header
      required: true
      schema:
        type: string
      description: Project number identifier header
    projectnameHeader:
      name: projectname
      in: header
      required: true
      schema:
        type: string
      description: Project name or client identifier header

  securitySchemes:
    azureApiKey:
      type: apiKey
      in: header
      name: api-key

  schemas:
    ChatCompletionRequest:
      type: object
      required:
        - messages
      properties:
        messages:
          type: array
          items:
            type: object
            required:
              - role
              - content
            properties:
              role:
                type: string
                enum: [system, user, assistant]
              content:
                type: string
        temperature:
          type: number
          default: 0.7
          minimum: 0
          maximum: 1
        max_tokens:
          type: integer
          default: 100
          minimum: 1
          maximum: 2048
        top_p:
          type: number
          default: 1.0
          minimum: 0
          maximum: 1
        frequency_penalty:
          type: number
          default: 0.0
          minimum: 0
          maximum: 2
        presence_penalty:
          type: number
          default: 0.0
          minimum: 0
          maximum: 2

    ChatCompletionResponse:
      type: object
      properties:
        id:
          type: string
        created:
          type: integer
        model:
          type: string
        choices:
          type: array
          items:
            type: object
            properties:
              index:
                type: integer
              message:
                type: object
                properties:
                  role:
                    type: string
                  content:
                    type: string
              finish_reason:
                type: string
        usage:
          type: object
          properties:
            prompt_tokens:
              type: integer
            completion_tokens:
              type: integer
            total_tokens:
              type: integer